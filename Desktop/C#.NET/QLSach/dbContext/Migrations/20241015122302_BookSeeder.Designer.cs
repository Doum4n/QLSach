// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QLSach.database;

#nullable disable

namespace QLSach.dbContext.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241015122302_BookSeeder")]
    partial class BookSeeder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QLSach.dbContext.models.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "book1"
                        },
                        new
                        {
                            id = 2,
                            name = "book2"
                        },
                        new
                        {
                            id = 3,
                            name = "book3"
                        },
                        new
                        {
                            id = 4,
                            name = "book4"
                        },
                        new
                        {
                            id = 5,
                            name = "book5"
                        },
                        new
                        {
                            id = 6,
                            name = "book6"
                        },
                        new
                        {
                            id = 7,
                            name = "book7"
                        },
                        new
                        {
                            id = 8,
                            name = "book8"
                        });
                });

            modelBuilder.Entity("QLSach.dbContext.models.author", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Authors");
                });
#pragma warning restore 612, 618
        }
    }
}
